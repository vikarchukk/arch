# dwm
1. git clone https://git.suckless.org/dwm
2. cd dwm
3. vim config.h {

static const unsigned int borderpx  = 1; /* товщина обведення */
static const unsigned int snap = 30; /* ? */

static const int showbar = 1; /* меню - 0 сховати / 1 показати */
static const int topbar = 0; /* меню - 0 знизу / 1 зверху */

static const char *fonts[] = { "monocraft:size=15" }; /* шрифт і розмір */
static const char dmenufont[] = "monocraft:size=15"; /* шрифт для dmenu */

static const char col_black[] = "#000000"; /* зміна кольору білого */
static const char col_while[] = "#ffffff"; /* зміна кольору чорного */
static const char *colors[][3] = {
  [SchemeNorm] = { col_while, col_black, col_black }, /* схема кольорів */
  [SchemeSel]  = { col_black, col_while, col_while  } };

static const char *tags[] = { "1", "2", "3", "4", "5" }; /* теги */

/* layout(s) */
static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
static const int nmaster     = 1;    /* number of clients in master area */
static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */

static const Layout layouts[] = {
  { "[]=", tile },    /* дефолтне відображиння вікон */
  { "><>", NULL },    /* вікна можна переміщати вільно */
  { "[M]", monocle }, /* вікна наложуються один на одного */
};

/* key definitions */
#define MODKEY Mod4Mask
#define TAGKEYS(KEY,TAG) \
	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },

/* helper for spawning shell commands in the pre dwm-5.0 fashion */
#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }

/* commands */
static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_black, "-nf", col_while, "-sb", col_black, "-sf", col_while, NULL }; /* налаштування dmenu */
static const char *termcmd[]  = { "alacritty", NULL };
static const char *steam[] = { "steam", NULL };
static const char *vieb[] = { "chromium", NULL };

void shiftview(const Arg *arg) { Arg shifted; unsigned int seltag = selmon->tagset[selmon->seltags]; signed int i = arg->i; if (i == 0) return; shifted.ui = (seltag + i) % (1 << LENGTH(tags)); if (shifted.ui != seltag) view(&shifted); }

static const Key keys[] = {
	/* modifier                     key        function        argument */
	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
	{ MODKEY,                       XK_s,      spawn,          {.v = steam } },
	{ MODKEY,                       XK_v,      spawn,          {.v = vieb } },
	{ MODKEY,                       XK_b,      togglebar,      {0} }, /* сховати або показати статус бар */
	{ MODKEY,                       XK_l,      focusstack,     {.i = +1 } }, /* перейти на наступне вікно */
	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } }, /* перейти на заднє вікно */
	{ MODKEY,                       XK_j,      setmfact,       {.f = +0.05} }, /* збільшує ширину вікна або області */
	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} }, /* зменшує ширину вікна або області */
	{ MODKEY,                       XK_o,      incnmaster,     {.i = +1 } }, /* змінює схему розкладки вікон вперед */
	{ MODKEY,                       XK_i,      incnmaster,     {.i = -1 } }, /* змінює схему розкладки вікон назад */
	{ MODKEY,                       XK_z,      zoom,           {0} }, /* збільшує вікно коли воно в рижимі (><>) */
	{ MODKEY,                       XK_Tab,    view,           {0} }, /* перехід між останіми тегами */
	{ MODKEY,                       XK_c,      killclient,     {0} }, /* закрити активне вікно */
	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} }, /* змінює рижим відображиння вікон на ([]=) */
	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} }, /* змінює рижим відображиння вікон на (><>) */
	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} }, /* змінює рижим відображиння вікон на ([M]) */
	{ MODKEY,                       XK_space,  setlayout,      {0} }, /* перехід між останіми рижимами для вікон */
	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} }, /* ? */
	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } }, /* перехід по тегах 1-9, 0 перегляд всіх вікон */
	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } }, /* перекидає вікна по тегам 1-9, 0 покажить вікно в всіх тегах */
	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } }, /* ? */
	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } }, /* ? */
	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } }, /* ? */
	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } }, /* ? */
	TAGKEYS(                        XK_1,                      0)
	TAGKEYS(                        XK_2,                      1)
	TAGKEYS(                        XK_3,                      2)
	TAGKEYS(                        XK_4,                      3)
	TAGKEYS(                        XK_5,                      4)
	TAGKEYS(                        XK_6,                      5)
	TAGKEYS(                        XK_7,                      6)
	TAGKEYS(                        XK_8,                      7)
	TAGKEYS(                        XK_9,                      8)
	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
	{ MODKEY,                       XK_e,      spawn,          SHCMD("setxkbmap ua") }, /* змінює розкладку клавіатури на українську */
	{ MODKEY,                       0x6d5,     spawn,          SHCMD("setxkbmap us") }, /* змінює розкладку клавіатури на англійську */
	{ MODKEY,                       XK_1,      spawn,          SHCMD("chromium") },
        { MODKEY,                       0x5b,      shiftview,      {.i = -1 } }, /* перемикає на попередній тег */
        { MODKEY,                       0x5d,      shiftview,      {.i = +1 } }, /* перемикає на наступний тег */
};

/* button definitions */
/* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
static const Button buttons[] = {
	/* click                event mask      button          function        argument */
	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
	{ ClkTagBar,            0,              Button1,        view,           {0} },
	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
};

static const Rule rules[] = {
	/* xprop(1):
	 *	WM_CLASS(STRING) = instance, class
	 *	WM_NAME(STRING) = title
	 */
	/* class      instance    title       tags mask     isfloating   monitor */
	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
};

}
4. sudo make clean install
