[ dwm ] ( dwm.suckless.org )
> git clone https://git.suckless.org/dwm | клонування коду програми
> cd dwm
> vim config.h {
static const unsigned int borderpx  = 0; // товщина обведення вікна
static const unsigned int gappx = 8; // проміжок пікселів між вікнами
static const unsigned int snap = 10; // наскільки піксилів збільшувати або зменшувати вікно

static const int showbar = 1; // меню - 0 сховати | 1 показати
static const int topbar = 0; // меню - 0 знизу | 1 зверху

static const char *fonts[] = { "monocraft:size=12" }; // шрифт і розмір
static const char *colors[][3] = {
  [SchemeNorm] = { "#ffffff", "#000000", "#000000" },
  [SchemeSel]  = { "#000000", "#ffffff", "#ffffff" } }; // схема кольорів

static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" }; // теги

// рижими відображиння вікон
static const Layout layouts[] = {
  { "[]=", tile }, // дефолтне відображиння вікон
  { "><>", NULL }, // вікна можна переміщати вільно
  { "[M]", monocle }, // вікна наложуються один на одного
};

static const float mfact = 0.55; // розмір основної області в процентах
static const int nmaster = 1; // кількість вікон в головній зоні
static const int resizehints = 0; // підказки щодо розміру 1 включити
static const int lockfullscreen = 1; // використовує весь екран 1 включити
static const int attachbelow = 1; // налаштування від пачу котрий відкриває нові вікна збоку

// скрипт для того щоб можна було переходити між тегами
void shiftview(const Arg *arg) { Arg shifted; shifted.ui = selmon->tagset[selmon->seltags]; if (arg->i > 0) shifted.ui = (shifted.ui << arg->i) | (shifted.ui >> (LENGTH(tags) - arg->i)); else shifted.ui = (shifted.ui >> (- arg->i) | shifted.ui << (LENGTH(tags) + arg->i)); view(&shifted); }

#define MODKEY Mod4Mask // для налаштування командної клавіші в моєму випадку це command

// для запуску команд
#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }

#define TAGKEYS(KEY,TAG) \
  { MODKEY,                        KEY,  view,        {.ui = 1 << TAG} }, /* переходить до вибраного тегу */ \
  { MODKEY|ControlMask,            KEY,  toggleview,  {.ui = 1 << TAG} }, /* показує в одному вікні вибрані теги */ \
  { MODKEY|ShiftMask,              KEY,  tag,         {.ui = 1 << TAG} }, /* перекидає активне вікно в вибраний тег */ \
  { MODKEY|ControlMask|ShiftMask,  KEY,  toggletag,   {.ui = 1 << TAG} }, /* показуватиме вікно в вибарних тегах */

// комбінації для клавіатури
static const Key keys[] = {
  { MODKEY,              XK_b,       togglebar,       {0} }, // сховати або показати статус бар

  // вікна
  { MODKEY,              XK_l,       focusstack,      {.i = +1 } }, // перейти на наступне вікно
  { MODKEY,              XK_k,       focusstack,      {.i = -1 } }, // перейти на заднє вікно
  { MODKEY,              XK_j,       setmfact,        {.f = +0.05} }, // збільшує ширину вікна або області
  { MODKEY,              XK_h,       setmfact,        {.f = -0.05} }, // зменшує ширину вікна або області
  { MODKEY,              XK_o,       incnmaster,      {.i = +1 } }, // змінює схему розкладки вікон вперед
  { MODKEY,              XK_i,       incnmaster,      {.i = -1 } }, // змінює схему розкладки вікон назад
  { MODKEY,              XK_z,       zoom,            {0} }, // робить вікно головним
  { MODKEY,              XK_d,       killclient,      {0} }, // закрити активне вікно
  { MODKEY,              XK_t,       setlayout,       {.v = &layouts[0]} }, // змінює рижим відображиння вікон на ([]=)
  { MODKEY,              XK_f,       setlayout,       {.v = &layouts[1]} }, // змінює рижим відображиння вікон на (><>)
  { MODKEY,              XK_m,       setlayout,       {.v = &layouts[2]} }, // змінює рижим відображиння вікон на ([M])
  { MODKEY|ShiftMask,    XK_space,   togglefloating,  {0} }, // виводить вікно з схеми розкладок вікон або водить його

  // теги
  { MODKEY,              XK_0,       view,            {.ui = ~0 } }, // перегляд всіх вікон
  { MODKEY|ShiftMask,    XK_0,       tag,             {.ui = ~0 } }, // показуватиме вікно в всіх тегах
  { MODKEY,              0x5b,       shiftview,       {.i = -1 } }, // перемикає на попередній тег
  { MODKEY,              0x5d,       shiftview,       {.i = +1 } }, // перемикає на наступний тег
  TAGKEYS(               XK_1,                        0) // привязка тегу до клавіші
  TAGKEYS(               XK_2,                        1)
  TAGKEYS(               XK_3,                        2)
  TAGKEYS(               XK_4,                        3)
  TAGKEYS(               XK_5,                        4)
  TAGKEYS(               XK_6,                        5)
  TAGKEYS(               XK_7,                        6)
  TAGKEYS(               XK_8,                        7)
  TAGKEYS(               XK_9,                        8)

  { MODKEY|ShiftMask,    XK_q,       quit,            {0} }, // виходить з графічного інтерфейсу (X)

  // зміна клавіатурної розкладки
  { MODKEY,              XK_space,   spawn,           SHCMD("layout=$(setxkbmap -query | awk '/layout/{print $2}'); if [ \"$layout\" = \"ua\" ]; then setxkbmap us; else setxkbmap ua; fi") }, // змінює розкладку клавіатури між українською і англійською

  // зміна гучності звуку
  { MODKEY,              0x3d,       spawn,           SHCMD("pactl set-sink-volume @DEFAULT_SINK@ +1%; pkill herbe; herbe \"[ volume: $(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}') / 100% ]\"") }, // збільшує звук
  { MODKEY,              0x2d,       spawn,           SHCMD("pactl set-sink-volume @DEFAULT_SINK@ -1%; pkill herbe; herbe \"[ volume: $(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}') / 100% ]\"") }, // зменшує звук

  // зміна підсвідчування екрану
  { MODKEY|ShiftMask,    0x3d,       spawn,           SHCMD("echo $(($(cat /sys/class/backlight/acpi_video0/brightness) + 1)) | tee /sys/class/backlight/acpi_video0/brightness; pkill herbe; herbe \"[ backlight screen: $(cat /sys/class/backlight/acpi_video0/brightness)% / 100% ]\"") }, // збільшує яскравість екрану
  { MODKEY|ShiftMask,    0x2d,       spawn,           SHCMD("echo $(($(cat /sys/class/backlight/acpi_video0/brightness) - 1)) | tee /sys/class/backlight/acpi_video0/brightness; pkill herbe; herbe \"[ backlight screen: $(cat /sys/class/backlight/acpi_video0/brightness)% / 100% ]\"") }, // зменшує яскравість екрану

  // зміна підсвідчування клавіатури
  { MODKEY|ControlMask,  0x3d,       spawn,           SHCMD("echo $(($(cat /sys/class/leds/apple::kbd_backlight/brightness) + 5)) | tee /sys/class/leds/apple::kbd_backlight/brightness; pkill herbe; herbe \"[ backlight keyboard: $(cat /sys/class/leds/apple::kbd_backlight/brightness)% / 500% ]\"") }, // збільшує яскравість клавіатури
  { MODKEY|ControlMask,  0x2d,       spawn,           SHCMD("echo $(($(cat /sys/class/leds/apple::kbd_backlight/brightness) - 5)) | tee /sys/class/leds/apple::kbd_backlight/brightness; pkill herbe; herbe \"[ backlight keyboard: $(cat /sys/class/leds/apple::kbd_backlight/brightness)% / 500% ]\"") }, // зменшує яскравість клавіатури

  // буфер обміну
  { MODKEY,              XK_c,       spawn,           SHCMD("xclip -selection clipboard -o") }, // скопіювати
  { MODKEY,              XK_v,       spawn,           SHCMD("xclip -selection clipboard -i") }, // вставити

  // відкриття програм
  { MODKEY,              XK_p,       spawn,           SHCMD("dmenu_run") },
  { MODKEY|ShiftMask,    XK_Return,  spawn,           SHCMD("alacritty") },
  { MODKEY|ShiftMask,    XK_z,       spawn,           SHCMD("chromium") },
  { MODKEY|ShiftMask,    XK_s,       spawn,           SHCMD("alacritty -e btop") },
  { MODKEY|ShiftMask,    XK_g,       spawn,           SHCMD("steam") },
};

// комбінація для мишки
static const Button buttons[] = {
  // клік на вікно програми
  { ClkClientWin,   MODKEY,            Button1,  movemouse,    {0} }, // переміщає вікно
  { ClkClientWin,   MODKEY|ShiftMask,  Button1,  resizemouse,  {0} }, // змінює розмір вікна

  // клік на тег
  { ClkTagBar,      0,                 Button1,  view,         {0} }, // перегляд тегу
  { ClkTagBar,      MODKEY,            Button1,  tag,          {0} }, // переміщення вікна до тегу
};

// налаштування де і як буду відкриватися програми
static const Rule rules[0] = {}; } | налаштування програми
> добавити пачі
  ├─ видалити dmenu з dwm.c (2 рядка)
  ├─ dwm.suckless.org/patches/fullgaps/ | щоб появився проміжок між вікнами
  │  └─ щоб проміжок також був в рижимі monocle
  │     │ - resize(c, m->wx, m->wy, m->ww - 2 * c->bw, m->wh - 2 * c->bw, 0);
  │     └ + resize(c, m->wx + gappx, m->wy + gappx, m->ww - 2 * c->bw - 2 * gappx, m->wh - 2 * c->bw - 2 * gappx, 0);
  └─ dwm.suckless.org/patches/attachbelow/ | щоб нові вікна відкривалися збокух
> sudo make clean install | збирання програми
